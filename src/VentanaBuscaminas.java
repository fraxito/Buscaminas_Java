
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Random;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

public class VentanaBuscaminas extends javax.swing.JFrame {

    int numeroDeMinas = 80;
    int filas = 20;
    int columnas = 30;
    Boton[][] arrayBotones = new Boton[filas][columnas];

    private void botonPulsado(MouseEvent evt){
        Boton boton = (Boton) evt.getComponent();
        if(evt.getButton() == MouseEvent.BUTTON3){
           if (boton.getText().equals("?"))
              {boton.setText("");}
           else {boton.setText("?");}
           
        }
        else{
           //Si es una bomba --> Explota y se acaba el juego.
            
            //Si no es una bomba
            //Si tiene minas alrededor mostramos cuantas
            
            if(arrayBotones[boton.x][boton.y].minasAlrededor == 0){
                ArrayList<Boton> listaDeCasillasAMirar = new ArrayList();
                listaDeCasillasAMirar.add(boton);
                
                while(listaDeCasillasAMirar.size() > 0){
                    Boton b = listaDeCasillasAMirar.get(0);
                    for(int k = -1; k<2; k++){
                        for(int m = -1; m<2; m++){
                            if((b.x + k >= 0)&&(b.y + m >= 0)&&(b.x + k < filas) && (b.y + m < columnas)){
                                if(arrayBotones[b.x + k][b.y + m].isEnabled()){
                                    if(arrayBotones[b.x + k][b.y + m].minasAlrededor == 0){
                                        arrayBotones[b.x + k][b.y + m].setEnabled(false);
                                        listaDeCasillasAMirar.add(arrayBotones[b.x + k][b.y + m]);
                                    }
                                }
                            }
                        }
                    }
                    listaDeCasillasAMirar.remove(b);
                } 
            }        
        }
    }
    
    private void cuentaMinas(){
        int minas = 0;
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                //uso un bucle anidado para recorrer
                //las 9 casillas que hay alrededor
                for (int k=-1; k<2; k++){
                    for(int m=-1; m<2; m++){
                        if ((i+k >= 0) && (j+m >= 0)&&(i+k < filas) && (j+m <columnas)){
                            minas = minas + arrayBotones[i+k][j+m].bomba;
                        }
                    }
                }
                arrayBotones[i][j].minasAlrededor = minas;
                if (minas>0 && arrayBotones[i][j].bomba == 0) 
                    {arrayBotones[i][j].setText(String.valueOf(minas));}
                minas = 0;
            }
        }
    }
    
    private void poneMinas(){
        Random r = new Random();
        int posX, posY; 
        for (int i=0; i<numeroDeMinas; i++){
            posX = r.nextInt(filas);
            posY = r.nextInt(columnas);
            arrayBotones[posX][posY].bomba = 1;
            arrayBotones[posX][posY].setText("B");
        }
    }
    
    public VentanaBuscaminas() {
        initComponents();
        setSize(1024,768);
        //ahora le digo a la pantalla que va a ser una rejilla
        getContentPane().setLayout(new GridLayout(filas, columnas));
        
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                Boton boton = new Boton(i,j);
                boton.setBorder(null);
                boton.setFocusPainted(false);
                boton.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mousePressed(MouseEvent evt) {
                       botonPulsado(evt);  
                    }
                });
                arrayBotones[i][j] = boton;
                getContentPane().add(boton);
            }
        }
        poneMinas();
        cuentaMinas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscaminas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaBuscaminas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
